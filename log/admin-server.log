2019-04-14 09:55:42.122  INFO 4860 --- [restartedMain] com.liujie.AdminServerApplication        : No active profile set, falling back to default profiles: default
2019-04-14 09:55:42.148  INFO 4860 --- [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@101a046b: startup date [Sun Apr 14 09:55:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@206b6d67
2019-04-14 09:55:45.628  INFO 4860 --- [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=19fb36fe-428e-3936-b386-62ab6ee0f4f1
2019-04-14 09:55:45.654  INFO 4860 --- [restartedMain] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-04-14 09:55:45.823  INFO 4860 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ddf5cee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-14 09:55:46.943  INFO 4860 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 12315 (http)
2019-04-14 09:55:46.975  INFO 4860 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-04-14 09:55:46.975  INFO 4860 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-04-14 09:55:46.988  INFO 4860 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramFiles\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\ProgramFiles\Java\jdk1.8.0_101\bin;D:\ProgramFiles\Java\jdk1.8.0_101\jre\bin;D:\maven\apache-maven-3.6.0\bin;D:\ProgramFiles\Git\cmd;D:\ProgramFiles\MySQL\MySQL Server 5.5\bin;C:\Users\liujie\AppData\Local\Microsoft\WindowsApps;;.]
2019-04-14 09:55:47.171  INFO 4860 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-04-14 09:55:47.171  INFO 4860 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5023 ms
2019-04-14 09:55:47.921  WARN 4860 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-04-14 09:55:47.921  INFO 4860 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-04-14 09:55:47.933  INFO 4860 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7e2f7092
2019-04-14 09:55:51.152  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-14 09:55:51.154  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-14 09:55:51.154  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-14 09:55:51.154  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-14 09:55:51.154  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-04-14 09:55:51.155  INFO 4860 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-04-14 09:55:51.155  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-14 09:55:51.156  INFO 4860 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-04-14 09:55:51.473  WARN 4860 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-04-14 09:55:51.473  INFO 4860 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-04-14 09:55:52.107  INFO 4860 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 09:55:52.301  INFO 4860 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@101a046b: startup date [Sun Apr 14 09:55:42 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@206b6d67
2019-04-14 09:55:52.420  INFO 4860 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-04-14 09:55:52.422  INFO 4860 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-14 09:55:52.505  INFO 4860 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 09:55:52.505  INFO 4860 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 09:55:52.663  WARN 4860 --- [restartedMain] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2019-04-14 09:55:53.803  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{instanceId}/actuator/**],methods=[GET || HEAD || POST || PUT || PATCH || DELETE || OPTIONS]}" onto public reactor.core.publisher.Mono<java.lang.Void> de.codecentric.boot.admin.server.web.servlet.InstancesProxyController.endpointProxy(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-14 09:55:53.821  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances],methods=[POST],consumes=[application/json]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, de.codecentric.boot.admin.server.domain.values.InstanceId>>> de.codecentric.boot.admin.server.web.InstancesController.register(de.codecentric.boot.admin.server.domain.values.Registration,org.springframework.web.util.UriComponentsBuilder)
2019-04-14 09:55:53.821  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<de.codecentric.boot.admin.server.domain.entities.Instance>> de.codecentric.boot.admin.server.web.InstancesController.instance(java.lang.String)
2019-04-14 09:55:53.822  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> de.codecentric.boot.admin.server.web.InstancesController.unregister(java.lang.String)
2019-04-14 09:55:53.823  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.domain.entities.Instance> de.codecentric.boot.admin.server.web.InstancesController.instances(java.lang.String)
2019-04-14 09:55:53.823  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/events],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.domain.events.InstanceEvent> de.codecentric.boot.admin.server.web.InstancesController.events()
2019-04-14 09:55:53.824  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.domain.entities.Instance>> de.codecentric.boot.admin.server.web.InstancesController.instanceStream(java.lang.String)
2019-04-14 09:55:53.824  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/events],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.domain.events.InstanceEvent>> de.codecentric.boot.admin.server.web.InstancesController.eventStream()
2019-04-14 09:55:53.831  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications/{name}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> de.codecentric.boot.admin.server.web.ApplicationsController.unregister(java.lang.String)
2019-04-14 09:55:53.832  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.web.ApplicationsController$Application> de.codecentric.boot.admin.server.web.ApplicationsController.applications()
2019-04-14 09:55:53.832  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.web.ApplicationsController$Application>> de.codecentric.boot.admin.server.web.ApplicationsController.applicationsStream()
2019-04-14 09:55:53.837  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/],methods=[GET],produces=[text/html]}" onto public java.lang.String de.codecentric.boot.admin.server.ui.web.UiController.index()
2019-04-14 09:55:53.837  INFO 4860 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/login],methods=[GET],produces=[text/html]}" onto public java.lang.String de.codecentric.boot.admin.server.ui.web.UiController.login()
2019-04-14 09:55:55.264  INFO 4860 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d59adf1, org.springframework.security.web.context.SecurityContextPersistenceFilter@420632aa, org.springframework.security.web.header.HeaderWriterFilter@4c71ed9a, org.springframework.security.web.authentication.logout.LogoutFilter@26fd1f0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58d58928, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@68296825, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@433df4a9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@542ba13f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@274a7bbd, org.springframework.security.web.session.SessionManagementFilter@5cabc931, org.springframework.security.web.access.ExceptionTranslationFilter@4bfac4f0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18e041c4]
2019-04-14 09:55:55.444  INFO 4860 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2019-04-14 09:55:55.589  INFO 4860 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoint(s) beneath base path '/actuator'
2019-04-14 09:55:55.611  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.613  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.613  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.614  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.614  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.614  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.615  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.615  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.616  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.616  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.616  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.617  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/logfile],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.617  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.617  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.618  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.618  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.621  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.621  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.622  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.622  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.622  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.623  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.623  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.623  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.624  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.624  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 09:55:55.625  INFO 4860 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-14 09:55:55.763  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-04-14 09:55:55.814  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-04-14 09:55:55.817  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-04-14 09:55:55.830  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-04-14 09:55:55.835  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-04-14 09:55:55.852  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-04-14 09:55:55.895  INFO 4860 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=101a046b,type=ConfigurationPropertiesRebinder]
2019-04-14 09:55:55.930  INFO 4860 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-04-14 09:55:55.955  INFO 4860 --- [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-04-14 09:55:56.170  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-04-14 09:55:56.487  INFO 4860 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-04-14 09:55:56.487  INFO 4860 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-04-14 09:55:56.807  INFO 4860 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-04-14 09:55:56.807  INFO 4860 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-04-14 09:55:57.254  INFO 4860 --- [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 09:55:57.574  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-04-14 09:55:57.575  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:00.723 ERROR 4860 --- [restartedMain] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269) [eureka-client-1.9.3.jar:1.9.3]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:290) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d.CGLIB$eurekaClient$0(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d$$FastClassBySpringCGLIB$$fb54a977.invoke(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$c9b9c0cb.getEurekaClient(<generated>) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.liujie.AdminServerApplication.main(AdminServerApplication.java:22) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_101]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_101]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_101]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_101]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_101]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 82 common frames omitted

2019-04-14 09:56:00.768  WARN 4860 --- [restartedMain] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.ConnectException: Connection refused: connect
2019-04-14 09:56:00.771 ERROR 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - was unable to refresh its cache! status = Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269) [eureka-client-1.9.3.jar:1.9.3]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:290) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d.CGLIB$eurekaClient$0(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d$$FastClassBySpringCGLIB$$fb54a977.invoke(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$9548560d.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$c9b9c0cb.getEurekaClient(<generated>) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.liujie.AdminServerApplication.main(AdminServerApplication.java:22) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE]

2019-04-14 09:56:00.797  WARN 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
2019-04-14 09:56:00.799  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 10
2019-04-14 09:56:00.802  INFO 4860 --- [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-04-14 09:56:00.808  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1555206960806 with initial instances count: 0
2019-04-14 09:56:00.814  INFO 4860 --- [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application admin-server with eureka with status UP
2019-04-14 09:56:00.816  INFO 4860 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1555206960815, current=UP, previous=STARTING]
2019-04-14 09:56:00.821  INFO 4860 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server: registering service...
2019-04-14 09:56:01.076  INFO 4860 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 12315 (http) with context path ''
2019-04-14 09:56:01.078  INFO 4860 --- [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 12315
2019-04-14 09:56:01.082  INFO 4860 --- [restartedMain] com.liujie.AdminServerApplication        : Started AdminServerApplication in 21.762 seconds (JVM running for 23.494)
2019-04-14 09:56:02.092  INFO 4860 --- [RMI TCP Connection(5)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-14 09:56:02.093  INFO 4860 --- [RMI TCP Connection(5)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-04-14 09:56:02.141  INFO 4860 --- [RMI TCP Connection(5)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2019-04-14 09:56:02.974 ERROR 4860 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_101]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_101]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_101]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_101]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_101]
	at java.net.Socket.connect(Socket.java:589) ~[na:1.8.0_101]
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 common frames omitted

2019-04-14 09:56:02.976  WARN 4860 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.ConnectException: Connection refused: connect
2019-04-14 09:56:02.976  WARN 4860 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 09:56:02.977  WARN 4860 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 09:56:05.800  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:05.801  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:05.801  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:05.802  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:05.802  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:05.803  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-04-14 09:56:05.803  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:07.309  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 09:56:10.902  INFO 4860 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - Re-registering apps/ADMIN-SERVER
2019-04-14 09:56:10.902  INFO 4860 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server: registering service...
2019-04-14 09:56:10.935  INFO 4860 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - registration status: 204
2019-04-14 09:56:12.315  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:12.315  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:12.316  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:12.316  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:12.316  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:12.316  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 09:56:12.316  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:12.330  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 09:56:17.333  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:17.333  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:17.334  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:17.334  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:17.334  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:17.334  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 09:56:17.334  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:17.352  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 09:56:22.356  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:22.357  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:22.357  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:22.357  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:22.357  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:22.357  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 09:56:22.358  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:22.373  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 09:56:27.378  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:27.452  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 09:56:32.457  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 09:56:32.457  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 09:56:32.457  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 09:56:32.457  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 09:56:32.457  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 09:56:32.458  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 09:56:32.458  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 09:56:32.514  INFO 4860 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 10:00:57.578  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:02:14.968  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=3, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74213269504, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T01:56:37.500Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:04:34.945  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=6, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74213191680, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:02:34.104Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:05:57.583  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:10:57.584  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:15:57.589  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:20:57.591  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:25:57.593  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:30:57.595  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:35:57.597  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:38:45.012  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=9, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74213191680, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:05:00.955Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:40:57.598  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:42:54.967  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=13, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212425728, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:39:44.236Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:44:04.933  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=16, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212360192, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:43:14.130Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:45:57.599  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:46:04.932  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=19, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212343808, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:44:24.177Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:48:44.953  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=22, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212229120, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:46:23.947Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:49:45.061  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=25, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212257792, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:49:23.935Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 10:50:38.124  WARN 4860 --- [http-nio-12315-exec-10] o.s.w.s.m.m.a.ReactiveTypeHandler        : 
!!!
Streaming through a reactive type requires an Executor to write to the response.
Please, configure a TaskExecutor in the MVC config under "async support".
The SimpleAsyncTaskExecutor currently in use is not suitable under load.
-------------------------------
Controller:	de.codecentric.boot.admin.server.web.ApplicationsController
Method:		applicationsStream
Returning:	reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.web.ApplicationsController$Application>>
!!!
2019-04-14 10:50:57.601  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 10:55:57.603  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:00:24.941  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=28, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212192256, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T02:50:04.151Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:00:57.604  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:02:24.940  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=31, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212159488, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:00:44.114Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:05:57.607  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:10:57.626  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:11:44.941  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=34, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74212093952, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:03:04.484Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:12:45.097  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=37, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211561472, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:12:00.984Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:15:04.943  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=40, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211459072, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:13:23.951Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:15:57.628  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:19:44.935  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=43, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211393536, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:15:25.461Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:20:57.630  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:22:25.160  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=46, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211373056, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:20:01.971Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:23:54.939  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=49, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211291136, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:22:45.083Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:25:57.632  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:26:03.951  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=52, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211155968, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:25:23.952Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:26:13.945  INFO 4860 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=52, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211155968, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:25:23.952Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:26:23.986  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=52, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74211155968, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:25:23.952Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:26:46.656  INFO 4860 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=54, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210959360, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:26:26.560Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:26:46.868  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=54, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210959360, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:26:26.560Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:30:34.932  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=57, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210938880, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:26:47.260Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:30:57.634  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:33:34.935  INFO 4860 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=60, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210828288, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:30:53.959Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.60.111:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 11:35:57.637  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:40:57.640  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:45:57.640  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:50:57.643  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:55:57.644  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 11:56:23.932  INFO 4860 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=63, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210828288, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:33:54.119Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:56:33.959  INFO 4860 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=63, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210828288, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:33:54.119Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 11:56:43.953  INFO 4860 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=1b5055714f6e, version=63, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.60.111:8080/actuator, healthUrl=http://192.168.60.111:8080/actuator/health, serviceUrl=http://192.168.60.111:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=74210828288, threshold=10485760}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T03:33:54.119Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.60.111:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.60.111:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.60.111:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.60.111:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.60.111:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.60.111:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.60.111:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.60.111:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.60.111:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.60.111:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.60.111:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.60.111:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.60.111:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.60.111:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.60.111:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.60.111:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.60.111:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.60.111:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.60.111:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.60.111:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1083)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 12:00:57.829  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 12:05:57.830  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 12:10:57.833  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 12:15:57.834  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 12:20:57.835  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 12:25:57.837  INFO 4860 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 13:44:53.046  INFO 11944 --- [restartedMain] com.liujie.AdminServerApplication        : No active profile set, falling back to default profiles: default
2019-04-14 13:44:53.812  INFO 11944 --- [restartedMain] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d3e34e: startup date [Sun Apr 14 13:44:53 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7e3402f5
2019-04-14 13:45:17.760  INFO 11944 --- [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=19fb36fe-428e-3936-b386-62ab6ee0f4f1
2019-04-14 13:45:17.777  INFO 11944 --- [restartedMain] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-04-14 13:45:18.665  INFO 11944 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2c3cd689] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-14 13:45:20.958  INFO 11944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 12315 (http)
2019-04-14 13:45:20.986  INFO 11944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-04-14 13:45:20.987  INFO 11944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-04-14 13:45:20.992  INFO 11944 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\ProgramFiles\Java\jdk1.8.0_101\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\ProgramFiles\Java\jdk1.8.0_101\bin;D:\ProgramFiles\Java\jdk1.8.0_101\jre\bin;D:\maven\apache-maven-3.6.0\bin;D:\ProgramFiles\Git\cmd;D:\ProgramFiles\MySQL\MySQL Server 5.5\bin;C:\Users\liujie\AppData\Local\Microsoft\WindowsApps;;.]
2019-04-14 13:45:22.392  INFO 11944 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-04-14 13:45:22.394  INFO 11944 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 28581 ms
2019-04-14 13:45:22.965  WARN 11944 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-04-14 13:45:22.965  INFO 11944 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-04-14 13:45:22.977  INFO 11944 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@270e19cc
2019-04-14 13:45:24.751  INFO 11944 --- [localhost-startStop-1] o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname
2019-04-14 13:45:26.129  INFO 11944 --- [localhost-startStop-1] o.s.cloud.commons.util.InetUtils         : Cannot determine local hostname
2019-04-14 13:45:26.871  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-14 13:45:26.872  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-04-14 13:45:26.872  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-14 13:45:26.872  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-14 13:45:26.872  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-04-14 13:45:26.873  INFO 11944 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-04-14 13:45:26.873  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-04-14 13:45:26.873  INFO 11944 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-04-14 13:45:27.037  WARN 11944 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-04-14 13:45:27.037  INFO 11944 --- [restartedMain] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-04-14 13:45:29.804  INFO 11944 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 13:45:29.964  INFO 11944 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d3e34e: startup date [Sun Apr 14 13:44:53 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7e3402f5
2019-04-14 13:45:30.044  INFO 11944 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-04-14 13:45:30.046  INFO 11944 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-14 13:45:30.092  INFO 11944 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 13:45:30.092  INFO 11944 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-14 13:45:34.092  WARN 11944 --- [restartedMain] ion$DefaultTemplateResolverConfiguration : Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2019-04-14 13:45:49.898  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{instanceId}/actuator/**],methods=[GET || HEAD || POST || PUT || PATCH || DELETE || OPTIONS]}" onto public reactor.core.publisher.Mono<java.lang.Void> de.codecentric.boot.admin.server.web.servlet.InstancesProxyController.endpointProxy(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-04-14 13:45:49.912  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances],methods=[POST],consumes=[application/json]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, de.codecentric.boot.admin.server.domain.values.InstanceId>>> de.codecentric.boot.admin.server.web.InstancesController.register(de.codecentric.boot.admin.server.domain.values.Registration,org.springframework.web.util.UriComponentsBuilder)
2019-04-14 13:45:49.913  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<de.codecentric.boot.admin.server.domain.entities.Instance>> de.codecentric.boot.admin.server.web.InstancesController.instance(java.lang.String)
2019-04-14 13:45:49.914  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> de.codecentric.boot.admin.server.web.InstancesController.unregister(java.lang.String)
2019-04-14 13:45:49.914  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.domain.entities.Instance> de.codecentric.boot.admin.server.web.InstancesController.instances(java.lang.String)
2019-04-14 13:45:49.921  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/events],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.domain.events.InstanceEvent> de.codecentric.boot.admin.server.web.InstancesController.events()
2019-04-14 13:45:49.922  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/events],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.domain.events.InstanceEvent>> de.codecentric.boot.admin.server.web.InstancesController.eventStream()
2019-04-14 13:45:49.923  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/instances/{id}],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.domain.entities.Instance>> de.codecentric.boot.admin.server.web.InstancesController.instanceStream(java.lang.String)
2019-04-14 13:45:49.927  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications/{name}],methods=[DELETE]}" onto public reactor.core.publisher.Mono<org.springframework.http.ResponseEntity<java.lang.Void>> de.codecentric.boot.admin.server.web.ApplicationsController.unregister(java.lang.String)
2019-04-14 13:45:49.933  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications],methods=[GET],produces=[text/event-stream]}" onto public reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.web.ApplicationsController$Application>> de.codecentric.boot.admin.server.web.ApplicationsController.applicationsStream()
2019-04-14 13:45:49.934  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/applications],methods=[GET],produces=[application/json]}" onto public reactor.core.publisher.Flux<de.codecentric.boot.admin.server.web.ApplicationsController$Application> de.codecentric.boot.admin.server.web.ApplicationsController.applications()
2019-04-14 13:45:49.943  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/],methods=[GET],produces=[text/html]}" onto public java.lang.String de.codecentric.boot.admin.server.ui.web.UiController.index()
2019-04-14 13:45:49.944  INFO 11944 --- [restartedMain] .b.a.s.w.s.AdminControllerHandlerMapping : Mapped "{[/login],methods=[GET],produces=[text/html]}" onto public java.lang.String de.codecentric.boot.admin.server.ui.web.UiController.login()
2019-04-14 13:45:53.250  INFO 11944 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f4c4275, org.springframework.security.web.context.SecurityContextPersistenceFilter@61d92dc3, org.springframework.security.web.header.HeaderWriterFilter@7c01e67, org.springframework.security.web.authentication.logout.LogoutFilter@5a743288, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21b41d1e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@73a59bbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37c1a740, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@151e4ac3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a664e7, org.springframework.security.web.session.SessionManagementFilter@45e54e2a, org.springframework.security.web.access.ExceptionTranslationFilter@7947ee09, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@48cb2085]
2019-04-14 13:45:53.429  WARN 11944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2019-04-14 13:45:53.644  INFO 11944 --- [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoint(s) beneath base path '/actuator'
2019-04-14 13:45:53.673  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/archaius],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.675  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/auditevents],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.676  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/beans],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.676  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.677  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/conditions],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.677  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/configprops],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.678  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.678  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env/{toMatch}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.679  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.679  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/env],methods=[DELETE],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.680  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.680  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/logfile],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.681  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.681  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers/{name}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.682  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/loggers/{name}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.682  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/heapdump],methods=[GET],produces=[application/octet-stream]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.682  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/threaddump],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.683  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/metrics/{requiredMetricName}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.683  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/metrics],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.684  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/scheduledtasks],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.684  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/httptrace],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.684  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/mappings],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.685  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/refresh],methods=[POST],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.685  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/features],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.686  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/service-registry],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v2+json || application/json],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.686  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/service-registry],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-04-14 13:45:53.688  INFO 11944 --- [restartedMain] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-14 13:45:53.777  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-04-14 13:45:53.794  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-04-14 13:45:53.798  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-04-14 13:45:53.802  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-04-14 13:45:53.807  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-04-14 13:45:53.822  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-04-14 13:45:53.841  INFO 11944 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=28d3e34e,type=ConfigurationPropertiesRebinder]
2019-04-14 13:45:53.856  INFO 11944 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-04-14 13:45:53.879  INFO 11944 --- [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-04-14 13:45:53.925  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-04-14 13:45:54.028  INFO 11944 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-04-14 13:45:54.028  INFO 11944 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-04-14 13:45:54.158  INFO 11944 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-04-14 13:45:54.158  INFO 11944 --- [restartedMain] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-04-14 13:45:54.345  INFO 11944 --- [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-04-14 13:45:54.501  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:15.620 ERROR 11944 --- [restartedMain] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269) [eureka-client-1.9.3.jar:1.9.3]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:290) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8.CGLIB$eurekaClient$2(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8$$FastClassBySpringCGLIB$$6ef69630.invoke(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$21356fce.getEurekaClient(<generated>) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.liujie.AdminServerApplication.main(AdminServerApplication.java:22) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_101]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:170) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_101]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 82 common frames omitted

2019-04-14 13:46:15.630  WARN 11944 --- [restartedMain] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-04-14 13:46:15.638 ERROR 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - was unable to refresh its cache! status = Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269) [eureka-client-1.9.3.jar:1.9.3]
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:290) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8.CGLIB$eurekaClient$2(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8$$FastClassBySpringCGLIB$$6ef69630.invoke(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$33a5cfa8.eurekaClient(<generated>) [spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:167) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:156) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$21356fce.getEurekaClient(<generated>) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:80) ~[spring-cloud-netflix-eureka-client-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:52) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:157) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:121) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:885) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:161) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.liujie.AdminServerApplication.main(AdminServerApplication.java:22) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_101]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_101]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_101]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_101]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.0.4.RELEASE.jar:2.0.4.RELEASE]

2019-04-14 13:46:15.645  WARN 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Using default backup registry implementation which does not do anything.
2019-04-14 13:46:15.650  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 10
2019-04-14 13:46:15.659  INFO 11944 --- [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-04-14 13:46:15.673  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1555220775670 with initial instances count: 0
2019-04-14 13:46:15.691  INFO 11944 --- [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application admin-server with eureka with status UP
2019-04-14 13:46:15.694  INFO 11944 --- [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1555220775694, current=UP, previous=STARTING]
2019-04-14 13:46:15.699  INFO 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server: registering service...
2019-04-14 13:46:19.492  INFO 11944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 12315 (http) with context path ''
2019-04-14 13:46:19.494  INFO 11944 --- [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 12315
2019-04-14 13:46:19.499  INFO 11944 --- [restartedMain] com.liujie.AdminServerApplication        : Started AdminServerApplication in 92.901 seconds (JVM running for 95.596)
2019-04-14 13:46:20.161  INFO 11944 --- [RMI TCP Connection(12)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-14 13:46:20.161  INFO 11944 --- [RMI TCP Connection(12)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-04-14 13:46:20.193  INFO 11944 --- [RMI TCP Connection(12)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2019-04-14 13:46:20.652  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:20.652  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:20.653  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:20.653  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:20.653  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:20.653  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-04-14 13:46:20.654  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:23.876 ERROR 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_101]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:170) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_101]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 common frames omitted

2019-04-14 13:46:23.882  WARN 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-04-14 13:46:23.883  WARN 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:23.885  WARN 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:25.652  WARN 11944 --- [DiscoveryClient-1] c.netflix.discovery.TimedSupervisorTask  : task supervisor timed out

java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) [na:1.8.0_101]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:64) ~[eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:28.661 ERROR 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_101]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:170) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_101]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 common frames omitted

2019-04-14 13:46:28.667  WARN 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-04-14 13:46:28.668 ERROR 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - was unable to refresh its cache! status = Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:31.075  INFO 11944 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - Re-registering apps/ADMIN-SERVER
2019-04-14 13:46:31.076  INFO 11944 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server: registering service...
2019-04-14 13:46:35.655  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:35.656  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:35.656  WARN 11944 --- [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor timed out

java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) [na:1.8.0_101]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:64) ~[eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:35.656  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:35.656  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:35.657  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:35.657  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-04-14 13:46:35.657  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:35.708  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:46:39.088 ERROR 11944 --- [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:852) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_101]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:170) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_101]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 27 common frames omitted

2019-04-14 13:46:39.091  WARN 11944 --- [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-04-14 13:46:40.715  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:40.716  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:40.716  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:40.716  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:40.716  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:40.716  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 13:46:40.717  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:40.729  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:46:45.731  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:45.731  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:45.732  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:45.732  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:45.732  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:45.732  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 13:46:45.732  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:45.738  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:46:47.102 ERROR 11944 --- [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:852) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_101]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:170) ~[na:1.8.0_101]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_101]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 28 common frames omitted

2019-04-14 13:46:47.104  WARN 11944 --- [DiscoveryClient-HeartbeatExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-04-14 13:46:47.106  WARN 11944 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:852) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:47.107 ERROR 11944 --- [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - was unable to send heartbeat!

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:852) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1399) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 13:46:50.741  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:50.741  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:50.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:50.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:50.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:50.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 13:46:50.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:50.758  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:46:53.891  INFO 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server: registering service...
2019-04-14 13:46:53.904  INFO 11944 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - registration status: 204
2019-04-14 13:46:55.761  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:46:55.761  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:46:55.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:46:55.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:46:55.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:46:55.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 13:46:55.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:46:55.768  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:47:00.796  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2019-04-14 13:47:00.797  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-04-14 13:47:00.872  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-04-14 13:47:05.295  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=0, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UNKNOWN, details={}), statusTimestamp=2019-04-14T05:47:00.947Z, info=Info(values={}), endpoints=Endpoints(endpoints={health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health)}), buildVersion=null)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:97)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:791)
	reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:461)
	reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:250)
	reactor.core.publisher.UnicastProcessor.drainFused(UnicastProcessor.java:234)
	reactor.core.publisher.UnicastProcessor.drain(UnicastProcessor.java:267)
	reactor.core.publisher.UnicastProcessor.onNext(UnicastProcessor.java:343)
	reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:573)
	reactor.core.publisher.FluxCreate$SerializedSink.next(FluxCreate.java:151)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.lambda$publish$0(InstanceEventPublisher.java:44)
	java.util.ArrayList.forEach(ArrayList.java:1249)
	java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	de.codecentric.boot.admin.server.eventstore.InstanceEventPublisher.publish(InstanceEventPublisher.java:42)
	de.codecentric.boot.admin.server.eventstore.InMemoryEventStore.lambda$append$0(InMemoryEventStore.java:41)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:67)
	reactor.core.publisher.MonoRunnable.call(MonoRunnable.java:30)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:135)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.drain(MonoIgnoreThen.java:172)
	reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:56)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:75)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onComplete(MonoFlatMap.java:174)
	reactor.core.publisher.Operators.complete(Operators.java:128)
	reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainSync(FluxFlattenIterable.java:559)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:630)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.request(FluxFlattenIterable.java:262)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onSubscribe(FluxFlattenIterable.java:206)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxFlattenIterable.subscribe(FluxFlattenIterable.java:107)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoStreamCollector.subscribe(MonoStreamCollector.java:69)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.Mono.subscribeWith(Mono.java:3188)
	reactor.core.publisher.Mono.subscribe(Mono.java:3074)
	reactor.core.publisher.Mono.subscribe(Mono.java:3041)
	reactor.core.publisher.Mono.subscribe(Mono.java:3013)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discover(InstanceDiscoveryListener.java:110)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.discoverIfNeeded(InstanceDiscoveryListener.java:99)
	de.codecentric.boot.admin.server.cloud.discovery.InstanceDiscoveryListener.onApplicationEvent(InstanceDiscoveryListener.java:94)
	org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:261)
	org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:180)
	org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	org.springframework.cloud.netflix.eureka.CloudEurekaClient.onCacheRefreshed(CloudEurekaClient.java:112)
	com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:981)
	com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473)
	com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.run(FutureTask.java:266)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 13:47:07.496  WARN 11944 --- [http-nio-12315-exec-2] o.s.w.s.m.m.a.ReactiveTypeHandler        : 
!!!
Streaming through a reactive type requires an Executor to write to the response.
Please, configure a TaskExecutor in the MVC config under "async support".
The SimpleAsyncTaskExecutor currently in use is not suitable under load.
-------------------------------
Controller:	de.codecentric.boot.admin.server.web.ApplicationsController
Method:		applicationsStream
Returning:	reactor.core.publisher.Flux<org.springframework.http.codec.ServerSentEvent<de.codecentric.boot.admin.server.web.ApplicationsController$Application>>
!!!
2019-04-14 13:49:41.701  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=5, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71993864192, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T05:47:40.560Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 13:50:54.506  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 13:55:54.509  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:00:30.368  INFO 11944 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=8, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71993864192, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T05:50:20.585Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-13T05:14:36.825Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

java.io.IOException: Connection closed prematurely
	at reactor.ipc.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:269) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at reactor.ipc.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:113) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277) ~[netty-handler-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:205) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:377) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:947) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:464) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 14:00:31.697  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:00:36.717  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:00:41.729  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:00:46.737  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:00:51.837  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:00:54.510  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:00:56.852  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:01.894  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:06.910  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:11.920  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:16.937  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:21.954  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:26.962  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:31.977  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:36.985  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:42.002  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:47.017  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:52.030  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:01:57.045  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:02.061  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:07.074  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:12.091  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:17.105  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:22.121  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:27.136  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:32.151  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:37.165  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:42.183  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:47.197  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:52.217  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:02:57.235  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:02.251  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:07.266  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:12.284  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:17.298  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:22.324  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:27.338  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:32.346  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:37.357  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:42.373  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:47.387  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:52.395  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:03:57.406  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:02.420  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:07.433  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:12.458  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:17.469  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:22.480  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:27.489  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:32.495  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:37.505  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:42.529  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:47.544  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:52.558  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:04:57.568  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:02.581  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:07.592  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:12.602  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:17.613  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:22.625  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:27.638  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:32.648  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:37.661  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:42.669  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:47.680  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:52.695  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:05:54.511  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:05:57.709  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:02.723  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:07.734  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:12.744  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:17.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:22.776  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:27.789  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:32.803  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:37.814  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:42.824  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:47.839  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:52.859  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:06:57.875  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:02.887  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:07.902  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:12.919  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:17.936  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:22.947  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:27.963  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:32.978  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:37.997  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:43.025  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:48.042  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:53.051  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:07:58.065  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:03.074  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:08.089  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:13.107  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:18.121  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:23.135  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:28.144  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:33.159  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:38.171  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:43.183  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:48.196  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:53.209  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:08:58.230  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:03.246  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:08.262  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:13.282  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:18.296  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:23.310  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:28.326  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:33.333  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:38.346  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:43.382  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:48.394  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:53.405  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:09:58.416  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:03.423  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:08.436  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:13.453  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:18.467  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:23.482  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:28.489  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:33.501  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:38.517  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:43.536  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:48.550  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:53.566  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:10:54.514  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:10:58.574  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:03.588  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:08.602  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:13.616  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:18.629  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:23.639  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:28.652  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:33.668  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:38.681  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:43.691  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:48.703  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:53.717  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:11:58.730  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:03.744  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:08.756  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:13.764  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:18.776  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:23.790  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:28.806  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:33.821  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:38.831  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:43.839  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:48.852  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:53.862  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:12:58.868  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:03.880  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:08.892  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:13.900  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:18.908  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:23.919  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:28.927  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:33.931  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:38.936  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:43.948  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:48.957  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:53.970  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:13:58.977  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:03.987  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:08.995  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:14.006  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:19.014  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:24.022  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:29.030  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:34.040  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:39.048  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:44.055  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:49.061  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:54.071  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:14:59.087  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:04.104  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:09.117  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:14.126  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:19.155  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:24.170  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:29.178  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:34.185  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:39.192  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:44.199  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:49.217  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:54.247  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:15:54.517  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:15:59.253  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:20:31.885  INFO 11944 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=14, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71992918016, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T06:16:04.446Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 14:20:40.341  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=14, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71992918016, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T06:16:04.446Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 14:20:51.913  INFO 11944 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=14, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71992918016, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T06:16:04.446Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 14:20:54.518  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:25:54.521  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:30:54.522  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:35:54.524  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:40:54.525  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:45:11.364  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=23, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71672389632, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T06:26:50.318Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 14:45:54.527  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:48:02.699  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:07.709  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:12.719  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:17.731  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:22.742  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:27.752  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:32.762  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:37.775  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:42.781  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:47.788  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:52.822  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:48:57.828  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:02.834  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:07.839  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:12.848  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:17.854  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:22.860  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:27.865  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:32.871  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:37.877  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:42.885  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:47.892  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:52.903  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:49:57.912  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:02.925  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:07.935  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:12.947  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:17.959  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:22.973  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:27.986  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:32.998  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:38.008  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:43.020  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:48.033  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:53.040  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:50:54.528  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:50:58.051  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:03.058  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:08.068  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:13.078  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:18.093  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:23.118  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:28.129  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:33.141  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:38.153  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:43.162  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:48.169  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:53.177  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:51:58.189  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:03.196  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:08.202  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:13.209  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:18.222  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:23.231  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:28.240  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:33.247  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:38.252  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:43.257  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:48.263  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:53.271  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:52:58.289  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:03.305  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:08.317  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:13.324  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:18.336  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:23.349  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:28.361  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:33.366  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:38.377  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:43.384  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:48.392  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:53.397  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:53:58.408  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:03.414  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:08.424  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:13.433  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:18.443  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:23.454  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:28.465  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:33.471  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:38.477  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:43.486  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:48.493  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:53.498  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:54:58.507  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:03.518  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:08.535  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:13.550  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:18.559  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:23.567  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:28.575  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:33.580  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:38.587  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:43.593  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:48.599  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:53.603  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:55:54.530  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 14:55:58.609  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:03.618  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:08.627  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:13.634  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:18.640  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:23.646  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:28.651  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:33.656  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:38.666  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:43.675  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:48.688  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:53.696  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:56:58.701  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:03.707  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:08.713  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:13.719  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:18.724  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:23.734  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:28.744  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:33.758  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:38.770  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:43.778  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:48.792  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:53.800  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:57:58.807  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:03.817  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:08.824  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:13.833  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:18.840  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:23.846  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:28.852  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:33.858  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:38.867  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:44.065  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:49.111  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:54.117  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:58:59.121  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:04.127  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:09.141  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:14.149  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:19.154  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:24.162  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:29.170  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:34.178  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:39.195  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:44.201  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:49.286  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:54.501  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 14:59:59.510  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:04.521  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:09.530  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:14.538  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:19.544  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:24.554  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:29.561  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:34.566  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:39.572  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:44.584  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:49.632  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:54.531  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:00:54.638  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:00:59.645  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:04.649  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:09.677  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:14.683  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:19.694  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:24.699  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:29.709  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:34.915  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:39.919  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:44.926  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:49.935  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:54.943  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:01:59.949  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:04.955  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:09.960  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:14.970  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:19.975  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:24.982  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:29.988  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:34.994  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:39.999  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:45.005  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:50.011  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:02:55.018  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:00.023  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:05.028  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:10.035  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:15.041  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:20.054  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:25.064  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:30.076  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:35.087  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:40.096  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:45.104  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:50.110  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:03:55.116  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:00.125  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:05.132  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:10.158  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:15.172  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:20.179  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:25.184  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:30.195  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:35.205  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:40.213  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:45.237  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:50.249  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:04:55.255  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:00.264  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:05.278  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:10.290  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:15.296  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:20.303  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:25.315  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:30.330  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:35.345  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:40.352  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:45.361  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:50.369  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:05:54.532  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:05:55.378  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:00.387  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:05.464  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:10.475  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:15.483  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:20.491  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:25.503  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:30.509  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:35.521  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:40.528  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:45.534  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:50.539  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:06:55.546  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:10:54.533  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:11:30.397  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=29, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71572275200, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:07:00.844Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

java.io.IOException: Connection closed prematurely
	at reactor.ipc.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:269) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at reactor.ipc.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:113) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277) ~[netty-handler-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:205) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:377) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:947) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:464) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 15:11:31.115  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:11:36.145  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:11:41.151  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:11:46.157  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:11:51.163  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:11:56.174  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:12:43.195  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=35, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71572127744, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:12:01.246Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

java.io.IOException: Connection closed prematurely
	at reactor.ipc.netty.http.client.HttpClientOperations.onInboundClose(HttpClientOperations.java:269) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at reactor.ipc.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:113) ~[reactor-netty-0.7.8.RELEASE.jar:0.7.8.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.timeout.IdleStateHandler.channelInactive(IdleStateHandler.java:277) ~[netty-handler-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpContentDecoder.channelInactive(HttpContentDecoder.java:205) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelInactive(CombinedChannelDuplexHandler.java:420) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:377) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342) ~[netty-codec-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.handler.codec.http.HttpClientCodec$Decoder.channelInactive(HttpClientCodec.java:282) ~[netty-codec-http-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.CombinedChannelDuplexHandler.channelInactive(CombinedChannelDuplexHandler.java:223) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:947) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:464) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 15:13:31.373  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:13:36.388  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:13:41.401  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:13:46.409  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:13:51.417  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:13:56.429  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:01.440  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:06.450  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:11.458  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:16.467  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:21.479  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:26.487  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:31.496  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:36.504  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:41.512  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:46.524  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:51.535  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:14:56.543  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:01.550  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:06.558  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:11.565  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:16.570  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:21.576  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:26.582  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:31.587  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:36.595  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:41.602  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:46.610  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:51.614  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:15:54.534  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:15:56.620  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:01.628  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:06.633  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:11.638  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:16.649  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:21.655  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:26.660  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:31.671  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:36.679  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:41.687  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:46.694  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:51.700  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:16:56.706  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:01.710  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:06.718  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:11.728  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:16.738  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:21.744  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:26.750  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:31.755  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:36.761  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:41.766  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:46.773  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:51.854  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:17:56.859  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:01.863  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:06.877  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:11.924  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:16.942  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:21.984  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:18:26.992  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:20:54.535  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:23:51.366  INFO 11944 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=42, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71566123008, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:18:32.094Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 15:25:54.539  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:30:54.553  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:31:11.360  INFO 11944 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=46, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=DOWN, details={hystrix={status=UP}, elasticsearch={status=DOWN, details={error=org.elasticsearch.ElasticsearchTimeoutException: java.util.concurrent.TimeoutException: Timeout waiting for task.}}, diskSpace={status=UP, details={total=149251158016, free=71565942784, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:29:56.543Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 15:35:54.553  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:36:41.446  INFO 11944 --- [reactor-http-nio-4] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=50, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71565717504, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:36:05.217Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 15:38:01.424  INFO 11944 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=52, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71565713408, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:37:22.028Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=2019-04-14T06:01:00.991Z}}), endpoints=Endpoints(endpoints={httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 15:40:54.555  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:45:54.556  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:50:54.558  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:53:51.461  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=57, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71565582336, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:39:35.435Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time={epochSecond=1555221660, nano=991000000}}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 15:54:01.748  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:06.763  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:11.774  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:16.782  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:21.792  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:26.802  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:54:52.534  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=60, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UNKNOWN, details={}), statusTimestamp=2019-04-14T07:54:31.810Z, info=Info(values={}), endpoints=Endpoints(endpoints={health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health)}), buildVersion=null)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 15:55:32.169  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:55:37.183  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:55:42.243  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:55:47.250  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:55:52.264  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:55:54.559  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 15:55:57.271  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:02.278  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:07.285  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:12.295  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:17.320  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:22.326  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 15:56:27.339  INFO 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] d.c.b.a.s.c.d.InstanceDiscoveryListener  : Instance (cafc86465f44) missing in DiscoveryClient services 
2019-04-14 16:00:54.560  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:05:54.561  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:10:54.563  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:15:54.564  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:15:55.656  WARN 11944 --- [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor timed out

java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205) [na:1.8.0_101]
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:64) ~[eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_101]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:15:55.968 ERROR 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:15:55.969  WARN 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: null
2019-04-14 16:15:55.994 ERROR 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

javax.ws.rs.WebApplicationException: null
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:198) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:170) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:15:55.995  WARN 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: null
2019-04-14 16:15:55.996 ERROR 11944 --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_ADMIN-SERVER/admin-server - was unable to refresh its cache! status = Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1085) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:967) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1473) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1440) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_101]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_101]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_101]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:20:54.566  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:21:21.375  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=70, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560527872, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T07:56:32.686Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 16:25:54.568  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:29:07.592 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:29:07.599 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:29:07.634  WARN 11944 --- [http-nio-12315-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
2019-04-14 16:30:54.569  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:31:10.341  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=73, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560441856, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T08:30:20.506Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 16:33:11.344  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=75, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560146944, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T08:31:16.667Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 16:35:54.570  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:40:54.570  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:45:54.572  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:50:00.320  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=80, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560257536, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T08:48:40.312Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 16:50:10.336  INFO 11944 --- [reactor-http-nio-3] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=80, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560257536, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T08:48:40.312Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 16:50:20.343  INFO 11944 --- [reactor-http-nio-1] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=80, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=UP, details={hystrix={status=UP}, elasticsearch={status=UP, details={clusterName=elasticsearch, numberOfNodes=1, numberOfDataNodes=1, activePrimaryShards=5, activeShards=5, relocatingShards=0, initializingShards=0, unassignedShards=4}}, diskSpace={status=UP, details={total=149251158016, free=71560257536, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Remote status from Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T08:48:40.312Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info)}), buildVersion=1.0-SNAPSHOT)

io.netty.handler.timeout.ReadTimeoutException: null
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)
	|_	Mono.doOnError(StatusUpdater.java:76)
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)


2019-04-14 16:50:24.337 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:50:24.343 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:50:24.352  WARN 11944 --- [http-nio-12315-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
2019-04-14 16:50:27.894 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:50:27.898 ERROR 11944 --- [http-nio-12315-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 16:50:27.904  WARN 11944 --- [http-nio-12315-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
2019-04-14 16:50:54.573  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 16:55:54.575  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:00:54.575  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:05:54.577  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:10:54.579  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:10:59.140 ERROR 11944 --- [http-nio-12315-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 17:10:59.143 ERROR 11944 --- [http-nio-12315-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 17:10:59.151  WARN 11944 --- [http-nio-12315-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
2019-04-14 17:11:04.294 ERROR 11944 --- [http-nio-12315-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 17:11:04.299 ERROR 11944 --- [http-nio-12315-exec-5] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception

java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_101]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_101]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297) ~[na:1.8.0_101]
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141) ~[na:1.8.0_101]
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229) ~[na:1.8.0_101]
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:121) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:103) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:43) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:226) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.sendInternal(ResponseBodyEmitterReturnValueHandler.java:200) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler$HttpMessageConvertingHandler.send(ResponseBodyEmitterReturnValueHandler.java:190) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.sendInternal(ResponseBodyEmitter.java:189) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.send(ResponseBodyEmitter.java:183) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.SseEmitter.send(SseEmitter.java:133) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$SseEmitterSubscriber.send(ReactiveTypeHandler.java:366) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ReactiveTypeHandler$AbstractEmitterSubscriber.run(ReactiveTypeHandler.java:309) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_101]

2019-04-14 17:11:04.301  WARN 11944 --- [http-nio-12315-exec-5] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
2019-04-14 17:15:54.580  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:20:31.337  INFO 11944 --- [reactor-http-nio-2] d.c.b.a.server.services.StatusUpdater    : Couldn't retrieve status for Instance(id=cafc86465f44, version=83, registration=Registration(name=LIUJIE-SERVER, managementUrl=http://192.168.191.1:8080/actuator, healthUrl=http://192.168.191.1:8080/actuator/health, serviceUrl=http://192.168.191.1:8080/, source=discovery), registered=true, statusInfo=StatusInfo(status=DOWN, details={hystrix={status=UP}, elasticsearch={status=DOWN, details={error=org.elasticsearch.client.transport.NoNodeAvailableException: None of the configured nodes are available: [{#transport#-1}{nUccRDpxSLqmdfBbSoKtvQ}{192.168.60.110}{192.168.60.110:9300}]}}, diskSpace={status=UP, details={total=149251158016, free=71559634944, threshold=10485760}}, rabbit={status=UP, details={version=3.6.8}}, refreshScope={status=UP}, discoveryComposite={status=UP, details={discoveryClient={status=UP, details={services=[liujie-server, admin-server]}}, eureka={description=Eureka discovery client has not yet successfully connected to a Eureka server, status=UP, details={applications={LIUJIE-SERVER=1, ADMIN-SERVER=1}}}}}, db={status=UP, details={database=MySQL, hello=1}}, redis={status=UP, details={version=3.2.100}}}), statusTimestamp=2019-04-14T09:19:20.516Z, info=Info(values={build={version=1.0-SNAPSHOT, artifact=common, name=common, group=com.liujie, time=1.555221660991E9}}), endpoints=Endpoints(endpoints={sessions=Endpoint(id=sessions, url=http://192.168.191.1:8080/actuator/sessions), httptrace=Endpoint(id=httptrace, url=http://192.168.191.1:8080/actuator/httptrace), loggers=Endpoint(id=loggers, url=http://192.168.191.1:8080/actuator/loggers), logfile=Endpoint(id=logfile, url=http://192.168.191.1:8080/actuator/logfile), health=Endpoint(id=health, url=http://192.168.191.1:8080/actuator/health), refresh=Endpoint(id=refresh, url=http://192.168.191.1:8080/actuator/refresh), env=Endpoint(id=env, url=http://192.168.191.1:8080/actuator/env), heapdump=Endpoint(id=heapdump, url=http://192.168.191.1:8080/actuator/heapdump), features=Endpoint(id=features, url=http://192.168.191.1:8080/actuator/features), scheduledtasks=Endpoint(id=scheduledtasks, url=http://192.168.191.1:8080/actuator/scheduledtasks), mappings=Endpoint(id=mappings, url=http://192.168.191.1:8080/actuator/mappings), archaius=Endpoint(id=archaius, url=http://192.168.191.1:8080/actuator/archaius), beans=Endpoint(id=beans, url=http://192.168.191.1:8080/actuator/beans), configprops=Endpoint(id=configprops, url=http://192.168.191.1:8080/actuator/configprops), threaddump=Endpoint(id=threaddump, url=http://192.168.191.1:8080/actuator/threaddump), metrics=Endpoint(id=metrics, url=http://192.168.191.1:8080/actuator/metrics), conditions=Endpoint(id=conditions, url=http://192.168.191.1:8080/actuator/conditions), auditevents=Endpoint(id=auditevents, url=http://192.168.191.1:8080/actuator/auditevents), service-registry=Endpoint(id=service-registry, url=http://192.168.191.1:8080/actuator/service-registry), info=Endpoint(id=info, url=http://192.168.191.1:8080/actuator/info), jolokia=Endpoint(id=jolokia, url=http://192.168.191.1:8080/actuator/jolokia)}), buildVersion=1.0-SNAPSHOT)

io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.191.1:8080
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[na:1.8.0_101]
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[na:1.8.0_101]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:634) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]
	at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_101]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Assembly trace from producer [reactor.core.publisher.MonoCreate] :
	reactor.core.publisher.Mono.create(Mono.java:172)
	reactor.ipc.netty.tcp.TcpClient.newHandler(TcpClient.java:174)
	reactor.ipc.netty.http.client.HttpClient$TcpBridgeClient.newHandler(HttpClient.java:385)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.lambda$subscribe$0(MonoHttpClientResponse.java:75)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:45)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryPredicate$RetryPredicateSubscriber.resubscribe(FluxRetryPredicate.java:123)
	reactor.core.publisher.MonoRetryPredicate.subscribe(MonoRetryPredicate.java:51)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.ipc.netty.http.client.MonoHttpClientResponse.subscribe(MonoHttpClientResponse.java:81)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:67)
	reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:108)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.FluxMap$MapSubscriber.request(FluxMap.java:149)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:1454)
	reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:1328)
	reactor.core.publisher.FluxMap$MapSubscriber.onSubscribe(FluxMap.java:86)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoMap.subscribe(MonoMap.java:55)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoSwitchIfEmpty.subscribe(MonoSwitchIfEmpty.java:44)
	reactor.core.publisher.MonoLogFuseable.subscribe(MonoLogFuseable.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoPeekFuseable.subscribe(MonoPeekFuseable.java:74)
	reactor.core.publisher.MonoOnErrorResume.subscribe(MonoOnErrorResume.java:44)
	reactor.core.publisher.MonoMapFuseable.subscribe(MonoMapFuseable.java:59)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:150)
	reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:1640)
	reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:103)
	reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:53)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.MonoFlatMap.subscribe(MonoFlatMap.java:60)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:82)
	reactor.core.publisher.MonoRetryWhen.subscribe(MonoRetryWhen.java:50)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.MonoIgnorePublisher.subscribe(MonoIgnorePublisher.java:41)
	reactor.core.publisher.MonoDoFinallyFuseable.subscribe(MonoDoFinallyFuseable.java:48)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:115)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.tryOnNext(FluxFilterFuseable.java:129)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.slowPath(FluxIterable.java:516)
	reactor.core.publisher.FluxIterable$IterableSubscriptionConditional.request(FluxIterable.java:474)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.request(FluxFilterFuseable.java:170)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:156)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onSubscribe(FluxFlatMap.java:332)
	reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:90)
	reactor.core.publisher.FluxFilterFuseable$FilterFuseableSubscriber.onSubscribe(FluxFilterFuseable.java:79)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:136)
	reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:64)
	reactor.core.publisher.FluxFilterFuseable.subscribe(FluxFilterFuseable.java:51)
	reactor.core.publisher.FluxMapFuseable.subscribe(FluxMapFuseable.java:63)
	reactor.core.publisher.FluxFlatMap.subscribe(FluxFlatMap.java:97)
	reactor.core.publisher.MonoIgnoreElements.subscribe(MonoIgnoreElements.java:37)
	reactor.core.publisher.Mono.subscribe(Mono.java:3080)
	reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:372)
	reactor.core.publisher.FluxSubscribeOn$SubscribeOnSubscriber.onNext(FluxSubscribeOn.java:151)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:185)
	reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:123)
	reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
	reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
	java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
Error has been observed by the following operator(s):
	|_	Mono.create(TcpClient.java:174)
	|_	Mono.defer(MonoHttpClientResponse.java:75)
	|_	Mono.retry(MonoHttpClientResponse.java:79)
	|_	Mono.cast(MonoHttpClientResponse.java:80)
	|_	Mono.map(ReactorClientHttpConnector.java:75)
	|_	Mono.doOnSubscribe(ExchangeFunctions.java:81)
	|_	Mono.doOnRequest(ExchangeFunctions.java:82)
	|_	Mono.doOnCancel(ExchangeFunctions.java:83)
	|_	Mono.map(ExchangeFunctions.java:84)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:131)
	|_	Mono.flatMap(InstanceExchangeFilterFunctions.java:63)
	|_	Mono.switchIfEmpty(DefaultWebClient.java:316)
	|_	Mono.log(StatusUpdater.java:74)
	|_	Mono.flatMap(StatusUpdater.java:75)

Caused by: java.net.ConnectException: Connection refused: no further information
	... 10 common frames omitted

2019-04-14 17:20:54.582  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-04-14 17:25:54.583  INFO 11944 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
